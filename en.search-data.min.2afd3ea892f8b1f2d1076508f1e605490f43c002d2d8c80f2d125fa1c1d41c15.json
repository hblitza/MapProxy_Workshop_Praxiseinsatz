[{"id":0,"href":"/docs/config/","title":"Config","section":"Docs","content":"Konfiguration #  MapProxy wird mittels übersichtlicher yaml-Dateien konfiguriert, wobei ebenso eine JSON-Konfiguration gültig ist. Sämtliche Beispiele in der Dokumentation sind in YAML beschrieben.\nEs sind Key-Value-Paare und Listen möglich:\n options-name: value [1,2,3] Wichtig zu beachten: korrekte Einrückung Leerzeichen nach Doppelpunkt Anführungszeichen um Strings -\u0026gt; [\u0026ldquo;EPSG:4326\u0026rdquo;]  Die zentrale Konfigurationsdatei ist die mapproxy.yaml, nachfolgend ein Auszug aus einem Beispiel:\nservices: demo: wms: srs: [\u0026#39;EPSG:4326\u0026#39;, \u0026#39;EPSG:900913\u0026#39;, \u0026#39;EPSG:3857\u0026#39;, \u0026#39;EPSG:4258\u0026#39;, \u0026#39;EPSG:26915\u0026#39;] # image_formats: [\u0026#39;image/jpeg\u0026#39;, \u0026#39;image/png\u0026#39;] md: # metadata used in capabilities documents title: MapProxy WMS Proxy abstract: This is the fantastic MapProxy. online_resource: http://mapproxy.org/ contact: person: Your Name Here position: Technical Director access_constraints: This service is intended for private and evaluation use only. The data is licensed as Creative Commons Attribution-Share Alike 2.0 (http://creativecommons.org/licenses/by-sa/2.0/) fees: \u0026#39;None\u0026#39; layers: - name: mapnik title: World population (Mapnik) sources: [mapnik] caches: mapnik_cache: grids: [GLOBAL_MERCATOR] sources: [tilestache] sources: geoserver: type: wms wms_opts: featureinfo: true req: url: http://localhost:8082/geoserver/wms? layers: \u0026#39;topp:states\u0026#39; transparent: true coverage: bbox: -124.73142200000001,24.955967,-66.969849,49.371735 bbox_srs: \u0026#39;EPSG:4326\u0026#39; grids: global_mercator_inverse: base: GLOBAL_MERCATOR origin: nw Seeding #  Neben dieser Haupt-Konfigurationsdatei wird oftmals eine Konfigurationsdatei für eine mapproxy-seed eingesetzt:\n# ####################################s################################ # MapProxy example seed configuration # ##################################################################### # # This is _not_ a runnable configuration, but it contains most # available options in meaningful combinations. # # Use this file in addition to the documentation to see where and how # things can be configured. seeds: myseed1: # seed all grids of this cache caches: [osm_cache] levels: to: 10 refresh_before: # re-generate tiles older than this date time: 2013-10-10T12:35:00 myseed2: # seed two caches, but only GLOBAL_GEODETIC grid caches: [cache1, cache2] grids: [GLOBAL_GEODETIC] levels: to: 14 refresh_before: # re-generate tiles older than the modification time # of this file. on linux/unix use `touch` to change the time. mtime: ./reseed.time cleanups: cleanup_older_tiles: caches: [osm_cache] remove_before: days: 30 levels: from: 16 remove_complete_levels: caches: [cache1] # remove all tiles regardless of the timestamp. # will remove the complete level directory for `file` caches remove_all: true levels: [14, 18, 19, 20] remove_changes: caches: [cache1] # be careful when using cleanup with coverages, since it needs to check # every possible tile in this coverage (as reported by # `mapproxy-util grids --coverage`). only use small coverages and/or limit # levels coverages: [changed_area] # without remove_before: remove all tiles created before you called # mapproxy-seed. i.e. tiles created before with in this seed run # are not removed levels: from: 14 to: 17 coverages: germany: # any source supported by OGR datasource: \u0026#39;shps/world_boundaries_m.shp\u0026#39; where: \u0026#39;CNTRY_NAME = \u0026#34;Germany\u0026#34;\u0026#39; srs: \u0026#39;EPSG:3857\u0026#39; austria: # simple bbox bbox: [9.36, 46.33, 17.28, 49.09] srs: \u0026#34;EPSG:4326\u0026#34; switzerland: # text file with WKT (Multi)Polygons datasource: \u0026#39;polygons/SZ.txt\u0026#39; srs: \u0026#34;EPSG:3857\u0026#34; changed_area: # example with PostGIS query datasource: \u0026#34;PG: dbname=\u0026#39;db\u0026#39; host=\u0026#39;host\u0026#39; user=\u0026#39;user\u0026#39; password=\u0026#39;password\u0026#39;\u0026#34; where: \u0026#34;select * from last_changes\u0026#34; srs: \u0026#39;EPSG:3857\u0026#39; "},{"id":1,"href":"/docs/config/bausteine/","title":"Bausteine","section":"Config","content":"Bausteine #     Layer Was ist nach außen verfügbar?   Cache Was wird gespeichert?   Source Wo kommen die Daten her?    Layer #  layers: - name: mapnik title: World population (Mapnik) sources: [mapnik] Caches #  caches: mapnik_cache: grids: [GLOBAL_MERCATOR] sources: [tilestache] Sources #  sources: geoserver: type: wms wms_opts: featureinfo: true req: url: http://localhost:8082/geoserver/wms? layers: \u0026#39;topp:states\u0026#39; transparent: true coverage: bbox: -124.73142200000001,24.955967,-66.969849,49.371735 bbox_srs: \u0026#39;EPSG:4326\u0026#39; Beispiel Cache WMS/Kacheldienst #   Beispiel Mehrere Quellen #   Komplexe Layer #   "},{"id":2,"href":"/docs/config/mapproxy.yaml/","title":"Mapproxy.Yaml","section":"Config","content":"mapproxy.yaml #     Layers Layer die der MapProxy nach außen anbietet   Caches Optionen für den Zwischenspeicher der Bilder   Sources Quellen auf die der MapProxy zugreifen kann   services Service die vom MapProxy angeboten werden solle z.B. WMS, TMS   grids Gitter zum Abspeichern der Kacheln   globals Interne Optionen des MapProxy     "},{"id":3,"href":"/docs/exercises/","title":"Exercises","section":"Docs","content":"Übungsaufgaben #  "},{"id":4,"href":"/docs/exercises/caches/","title":"Caches","section":"Exercises","content":"Caches #  Aufgabe 1: #  Konfigurieren Sie einen Cache für den Layer zürich_ortho (zunächst nur für das Grid webmercator). Stellen Sie anschließend die Source für den Layer zürich_orthofoto auf diesen Cache um.\nErzeugen Sie manuell Requests an den Layer, um den Cache aufzubauen. Hierzu zoomen und panen Sie einfach in der MapProxy Demo auf dem Layer umher. Die Standard-Caching Konfiguration erzeugt Kacheln im Dateisystem. Vergewissern Sie sich, dass im Ordner cache_data ein Unterordner für den entsprechenden Layer erstellt wurde und Kacheln abgelegt wurden.\n Expand ↕  layers: (...) - name: zürich_orthofoto title: Zürich Orthofoto Sommer sources: [zürich_cache] caches: osm_cache: grids: [webmercator] sources: [osm_wms] zürich_cache: grids: [webmercator] sources: [zürich_ortho]     Aufgabe 2: #  Definieren Sie ein neues Grid für die UTM Zone 32N (EPSG:25832) in den Maßstäben 25.000, 10.000, 5000, 2.500 und 1.000.\nEs gibt viele Parameter für eine Grid-Konfiguration, beschränken Sie sich zunächst auf:\n bbox (siehe https://epsg.io/25832) ggf. bbox_srs origin (nw = upperleft corner) res  Für letzteren Parameter kann das Tool mapproxy-util scales verwendet werden. Infos: https://mapproxy.org/docs/latest/mapproxy_util.html#scales\nVerwenden Sie das neu erstellte Grid für den oben erzeugten Cache zürich_cache.\n Expand ↕  grids: webmercator: base: GLOBAL_WEBMERCATOR utm32n: bbox: [-16.1, 32.88, 40.18, 84.17] bbox_srs: \u0026#39;EPSG:4326\u0026#39; srs: EPSG:25832 origin: nw res: [ # res level scale @90.7 DPI 7.0000000000, # 0 25000.00000000 5.6000000000, # 1 20000.00000000 4.2000000000, # 2 15000.00000000 2.8000000000, # 3 10000.00000000 1.4000000000, # 4 5000.00000000 0.7000000000, # 5 2500.00000000 0.2800000000, # 6 1000.00000000 ]     Aufgabe 3: #  Definieren Sie ein neues Falschfarben-Komposit für den zürich_cache, in dem Sie die Farbkanäle vertauschen.\nInfos: https://mapproxy.org/docs/latest/configuration.html#band-merging\nLösung: #   Expand ↕  caches: osm_cache: grids: [webmercator] sources: [osm_wms] zürich_cache: grids: [utm32n] sources: r: [{source: zürich_ortho, band: 2}] g: [{source: zürich_ortho, band: 0}] b: [{source: zürich_ortho, band: 1}]     "},{"id":5,"href":"/docs/exercises/seeding/","title":"Seeding","section":"Exercises","content":"Seeding #  Aufgabe 1: #  Definieren Sie einen Seed Task in der seed.yaml für ersten zwei Level des zürich_cache. Hierbei soll ein Coverage verwendet werden, das einen kleinen Ausschnitt von Zürich abbildet (z.B. die Altstadt).\nHinweise: Existierende seed.yaml, https://mapproxy.org/docs/latest/seed.html.\nAufgabe 2: #  Definieren Sie eine Cleanup Task, die sämtliche Kacheln des ersten Levels entfernt.\nLösung angepasste seed.yaml #   Expand ↕  seeds: seed_zürich: caches: [zürich_cache] grids: [\u0026#39;utm32n\u0026#39;] coverages: [\u0026#39;zürich_city\u0026#39;] levels: to: 2 cleanups: cleanup_older_tiles: caches: [zürich_cache] remove_all: true levels: to: 1 coverages: zürich_city: bbox: [8.5226440429687500, 47.3621995088096170, 8.5578775405883789, 47.3832414117836080] srs: \u0026#39;EPSG:4326\u0026#39;     Lösung Seeding Befehle #   Expand ↕  mapproxy-seed -s seed.yaml -f mapproxy.yaml --seeed seed_zürich mapproxy-seed -s seed.yaml -f mapproxy.yaml --cleanup cleanup_all_tiles     "},{"id":6,"href":"/docs/exercises/setup/","title":"Setup","section":"Exercises","content":"Setup #   Öffnen Sie das Terminal (Strg+Alt+T) und überprüfen Sie ihre MapProxy-Version:  mapproxy-util --version Auf der OS Geo LIVE 14 ist MapProxy in der Version 1.13 installiert. Infos über neue Features oder Änderungen in neuen Versionen sind im jeweiligen Blog-Eintrag zu finden.\nErstellen Sie eine Basis-Konfiguration in dem Ordner mapproxy-ws  mapproxy-util create -t base-config mapproxy-ws Navigieren Sie in den neu erstellen Ordner (cd mapproxy-ws) und betrachten Sie die Dateien (z.B. mit ls -lah).  In diesem Workshop werden wir hauptsächlich die Dateien mapproxy.yaml und seed.yaml arbeiten. Sie enthalten eine Beispiel-Konfiguration, die zunächst in der MapProxy-Demo Seite betrachtet werden können.\nStarten Sie den MapProxy-Server mit dem folgenden Befehl:  mapproxy-util serve-develop -b 8081 mapproxy.yaml Sollte der Port bereits belegt sein, ändern sie den Parameter -b (--bind) auf einen anderen Port.\nRufen Sie die MapProxy Demo Seite anschließend im Browser auf.  Die Demo Seite ist nützlich, um rasch Änderungen in der Konfiguration zu überprüfen, ist aber nicht für den Produktivbetrieb notwendig. Hier werden sämtliche konfigurierte Dienste und Layer des MapProxys aufgelistet.\nDeaktivieren Sie zu Demo-Zwecken die TMS und WMTS Endpunkte und überprüfen Sie das Ergebnis auf der Demo Seite.\nNeben der MapProxy Demo, werden wir in diesem Workshop QGIS benutzen, um uns die MapProxy Layer anzuschauen. Öffnen Sie QGIS und fügen Sie den MapProxy WMS Dienst als WMS/WMTS Verbindung hinzu.  Tipp: Datenquellenverwaltung -\u0026gt; Neue WMS/WMTS Quelle -\u0026gt; http://localhost:8081/service "},{"id":7,"href":"/docs/exercises/sources/","title":"Sources","section":"Exercises","content":"Sources #  Aufgabe 1: #  Fügen Sie eine neue Source mit weltweiter Abdeckung hinzu, beispielsweise den TopPlusOpen Dienst des BKG (Bundesamt für Kartographie und Geodäsie) mit der URL: https://sgx.geodatenzentrum.de/wms_topplus_open\nAufgabe 2: #  Stellen Sie die WMS-Version der neuen Source auf 1.3.0 und aktivieren Sie legendgraphic Option. Laden Sie den Layer in QGIS und überprüfen Sie die GetLegendGraphic Function.\nAufgabe 3: #  Beschränken Sie die Source auf den Extent der Schweiz. Hier führen mehrere Wege zum Ziel! Am einfachsten ist die Angabe einer Bounding Box, möglich ist aber auch die Angabe des Coverages durch externe Geodaten (Shape, GeoJSON, PostGIS) oder simple WKT-Dateien (siehe: https://mapproxy.org/docs/latest/coverages.html#coverages).\nVerwenden Sie einmal die Methode einer einfachen Bounding box und formulieren Sie als Bonus eine SQL-Abfrage für den Extent der Länder Österreich und Schweiz. Hierzu sind auf der OS Geo Live Natural Earth Daten in einer Postgres/PostGIS Datenbank hinterlegt (Tabelle: ne_10m_admin_0_countries).\nLösung 3: #   Expand ↕  sources: topPlus_open_source: type: wms req: url: https://sgx.geodatenzentrum.de/wms_topplus_open layers: web supported_srs: [\u0026#39;EPSG:3857\u0026#39;] wms_opts: version: 1.3.0 legendgraphic: true coverage: bbox: [5.95, 45.82, 10.46, 47.80] srs: \u0026#39;EPSG:4326\u0026#39;     Lösung 3 Bonus: #   Expand ↕  sources: topPlus_open_source: type: wms req: url: https://sgx.geodatenzentrum.de/wms_topplus_open layers: web supported_srs: [\u0026#39;EPSG:3857\u0026#39;] wms_opts: version: 1.3.0 legendgraphic: true coverage: datasource: \u0026#34;PG: dbname=\u0026#39;natural_earth2\u0026#39; host=\u0026#39;localhost\u0026#39; user=\u0026#39;user\u0026#39; password=\u0026#39;user\u0026#39;\u0026#34; where: \u0026#34;select * from ne_10m_admin_0_countries where sov_a3=\u0026#39;CHE\u0026#39; OR sov_a3=\u0026#39;AUT\u0026#39;\u0026#34; srs: \u0026#39;EPSG:4326\u0026#39;     Aufgabe 4: #  Fügen Sie eine neue WMS Source des Kantons Zürich hinzu (URL: https://wms.zh.ch/OGDOrthoZH), wählen Sie den Layer ortho_s und konfigurieren Sie den Dienst für die WMS-Version 1.3.0. Dieser Layer enthält Orthofotos des Kantons Zürichs aus dem Jahr 2020.\nAufgabe 5: #  Definieren Sie Image Format Options für diese Source mit dem Ziel, dass die Farbe Weiß vollständig transparent wird (an den Rändern des Orthofotos befinden sich weiße Blöcke). Infos: https://mapproxy.org/docs/latest/sources.html#image\nVariieren Sie die transparent_color_tolerance und beobachten Sie das Ergebnis. Welcher Fehler kann an dieser Stelle entstehen?\nLösung 4+5: #   Expand ↕  zürich_ortho: type: wms wms_opts: version: 1.3.0 image: format: image/png transparent_color: \u0026#39;#ffffff\u0026#39; transparent_color_tolerance: 50 req: url: https://wms.zh.ch/OGDOrthoZH layers: ortho_s coverage: # approx. bbox in epsg:3857 bbox: [908057, 5965233, 1006505, 6081637] srs: \u0026#39;EPSG:3857\u0026#39;     "},{"id":8,"href":"/docs/introduction/installation/","title":"Installation","section":"Docs","content":"Installation #  Es gibt verschiende Möglichkeiten MapProxy zu installieren:\n Systemweite Installation (wie auf der OS Geo Live)\npython -m pip install MapProxy Virtual Environment (Anleitung) Über ein docker image (z.B. kartoza)  Abhängigkeiten #   PyYAML Pillow (Python Image Library) pyproj Shapely GDAL lxml  "},{"id":9,"href":"/docs/introduction/sources/","title":"Sources","section":"Docs","content":"Quellen #   WMS (1.0.0/1.1.0/1.1.1/1.3.0) WMS-C WMTS TMS Kacheln (Google Maps, Bing, etc.) Mapnik MapServer ArcGIS REST  Dienste #   WMS (1.0.0/1.1.0/1.1.1/1.3.0) WMS-C WMTS/TMS KML  "}]