<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Einleitung on im Praxiseinsatz</title><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/</link><description>Recent content in Einleitung on im Praxiseinsatz</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><atom:link href="https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/config/bausteine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/config/bausteine/</guid><description>Bausteine # Layer Was ist nach außen verfügbar? Cache Was wird gespeichert? Source Wo kommen die Daten her? Layer # layers: - name: mapnik title: World population (Mapnik) sources: [mapnik] Caches # caches: mapnik_cache: grids: [GLOBAL_MERCATOR] sources: [tilestache] Sources # sources: geoserver: type: wms wms_opts: featureinfo: true req: url: http://localhost:8082/geoserver/wms? layers: &amp;#39;topp:states&amp;#39; transparent: true coverage: bbox: -124.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/config/mapproxy.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/config/mapproxy.yaml/</guid><description>mapproxy.yaml # Layers Layer die der MapProxy nach außen anbietet Caches Optionen für den Zwischenspeicher der Bilder Sources Quellen auf die der MapProxy zugreifen kann services Service die vom MapProxy angeboten werden solle z.B. WMS, TMS grids Gitter zum Abspeichern der Kacheln globals Interne Optionen des MapProxy</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/config/seed.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/config/seed.yaml/</guid><description>Seeding # Flexibles erzeugen, aktualisieren, löschen Abhängig von Zoom-Level Alter der Kacheln Lage Bausteine # seeds Welche Kacheln (neu) erzeugt werden sollen cleanups Welche Kacheln gelöscht werden sollen coverages Geometrien zum Beschränken des Seeding Beispiel einer Seed Task # seeds: myseed: caches: [osm_cache] grids: [GLOBAL_MERCATOR] refresh_before: weeks: 3 levels: to: 12 Seed-Tool # Erzeugt eine Übersicht über alle Tasks in einer seed-Konfiguration (-s seed.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/caches/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/caches/</guid><description>Caches # Aufgabe 1: # Konfigurieren Sie einen Cache für den Layer zürich_ortho (zunächst für das Grid webmercator). Stellen Sie anschließend die Source für den Layer zürich_orthofoto auf diesen Cache um.
Erzeugen Sie manuell Requests an den Layer, um den Cache aufzubauen. Hierzu zoomen und panen Sie einfach in der MapProxy Demo auf dem Layer umher. Die Standard-Caching Konfiguration erzeugt Kacheln im Dateisystem. Vergewissern Sie sich, dass im Ordner cache_data ein Unterordner für den entsprechenden Layer erstellt wurde und Kacheln abgelegt wurden.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/seeding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/seeding/</guid><description>Seeding # Aufgabe 1: # Definieren Sie einen Seed Task in der seed.yaml für ersten zwei Level des zürich_cache. Hierbei soll ein Coverage verwendet werden, das einen kleinen Ausschnitt von Zürich abbildet (z.B. die Altstadt).
Hinweise: Existierende seed.yaml, https://mapproxy.org/docs/latest/seed.html.
Aufgabe 2: # Definieren Sie eine Cleanup Task, die sämtliche Kacheln des ersten Levels entfernt.
Lösung angepasste seed.yaml # Expand ↕ seeds: seed_zürich: caches: [zürich_cache] grids: [&amp;#39;utm32n&amp;#39;] coverages: [&amp;#39;zürich_city&amp;#39;] levels: to: 2 cleanups: cleanup_older_tiles: caches: [zürich_cache] remove_all: true levels: to: 1 coverages: zürich_city: bbox: [8.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/setup/</guid><description>Setup # Aufgabe 1: # Öffnen Sie das Terminal (Strg+Alt+T) und überprüfen Sie ihre MapProxy-Version:
mapproxy-util --version Auf der OS Geo LIVE 14 ist MapProxy in der Version 1.13 installiert. Infos über neue Features oder Änderungen in neuen Versionen sind im jeweiligen Blog-Eintrag zu finden.
Aufgabe 2: # Erstellen Sie eine Basis-Konfiguration in dem Ordner mapproxy-ws
mapproxy-util create -t base-config mapproxy-ws Aufgabe 3: # Navigieren Sie in den neu erstellen Ordner (cd mapproxy-ws) und betrachten Sie die Dateien (z.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/exercises/sources/</guid><description>Sources # Aufgabe 1: # Fügen Sie eine neue Source mit weltweiter Abdeckung hinzu, beispielsweise den TopPlusOpen Dienst des BKG (Bundesamt für Kartographie und Geodäsie) mit der URL: https://sgx.geodatenzentrum.de/wms_topplus_open
Aufgabe 2: # Stellen Sie die WMS-Version der neuen Source auf 1.3.0 und aktivieren Sie legendgraphic Option. Laden Sie den Layer in QGIS und überprüfen Sie die GetLegendGraphic Function.
Aufgabe 3: # Beschränken Sie die Source auf den Extent der Schweiz.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/caches/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/caches/</guid><description>Caches # Zwischenspeicher für die Daten Standardmäßig 1 Kacheln = 1 Datei mehrere Quellen zusammengefasst mehrere Projektionen separat cache_dir/mycache_EPSG0000/12/000/001/432/000/041/322.jpg cache_dir/mycache_EPSG1111/12/000/001/432/000/041/322.jpg Backend-Formate # File Kacheln im Dateisystem MBTiles (seit 1.2.0) SQLite Datenbank (1 Datei pro Cache) SQLite (seit 1.6.0) ähnlich MBTiles mit Timestamps eine Datei pro Level GeoPackage (seit 1.10.0) ähnlich MBTiles OGC Standard deutlich komplexer da auch Vektordaten vorgesehen sind ArcGIS Compact Cache Version 1 und 2 (seit 1.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/grids/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/grids/</guid><description>Grids # Grid = Kachelgitter Definiert räumliche Ausdehnung jeder Kachel Definieren feste Auflösungen der Karten (Zoomstufen) MapProxy Standardgitter # “Google”-Projektion (EPSG:3857): GLOBAL_WEBMERCATOR GLOBAL_MERCATOR WGS84 (EPSG:4326) GLOBAL_GEODETIC Beispiel AdV Gitter # grids: utm32_adv: bbox: [-46133.17, 5048875.26857567, 1206211.10142433, 6301219.54] srs: &amp;#39;EPSG:25832&amp;#39; origin: ul res: - 4891.96981025128 - 2445.98490512564 - 1222.99245256282 - 611.496226281410 - 305.748113140705 - 152.874056570353 - 76.4370282851763 - 38.</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/installation/</guid><description>Installation # Es gibt verschiende Möglichkeiten MapProxy zu installieren:
Systemweite Installation (wie auf der OS Geo Live)
python -m pip install MapProxy Virtual Environment (Anleitung) Über ein docker image (z.B. kartoza) Abhängigkeiten # PyYAML Pillow (Python Image Library) pyproj Shapely GDAL lxml</description></item><item><title/><link>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hblitza.github.io/MapProxy_Workshop_Praxiseinsatz/docs/introduction/sources/</guid><description>Quellen # WMS (1.0.0/1.1.0/1.1.1/1.3.0) WMS-C WMTS TMS Kacheln (Google Maps, Bing, etc.) Mapnik MapServer ArcGIS REST Dienste # WMS (1.0.0/1.1.0/1.1.1/1.3.0) WMS-C WMTS/TMS KML</description></item></channel></rss>